from moleculekit.molecule import Molecule
from moleculekit.tools.voxeldescriptors import getVoxelDescriptors, viewVoxelFeatures
from moleculekit.tools.atomtyper import prepareProteinForAtomtyping
from moleculekit.smallmol.smallmol import SmallMol
from moleculekit.home import home
import os
import torch
import torch.nn as nn
import torch.nn.functional as F
import numpy as np
from torch.utils.data import Dataset, DataLoader, random_split
import re
import pandas as pd
from openbabel import openbabel
from openbabel import pybel

# I/O arrays for model
x = []
y = []

os.chdir('/home/users/jvs15/project-protein-fold')
mapper = pd.read_csv('odorantsForDE.csv')

obConversion = openbabel.OBConversion()
obConversion.SetInAndOutFormats("smi", "mol2")
gen3d = openbabel.OBOp.FindType("gen3D")

# Retrieve ligand names from olfr_de to generate mol files
mol_names = []
for filename in os.listdir('olfr_de'):
    if filename[0:3] == 'pS6':
        chem = filename.split('_')[-1]
        chem = chem[0:len(chem)-4]
        smile = mapper.iat[(mapper['Name on Sheet'] == chem).idxmax(), 4]
        if isinstance(smile, str):
            mol = openbabel.OBMol()
            obConversion.ReadString(mol, smile)
            mol.AddHydrogens()
            print(chem)
            gen3d.Do(mol, "--best")
            outmol = obConversion.WriteString(mol)
            with open(f'mol_data_files/{chem}.mol', 'w') as f:
                f.write(outmol)
